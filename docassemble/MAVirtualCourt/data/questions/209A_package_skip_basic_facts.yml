comment: |
  MVP: Do we want to fill in as much of the PDF as possible?
---
objects:
  - placeholder_signature: DAStaticFile.using(filename='mass_icon.png')
---
question: |
  Which sections should we skip?
subquestion: |
  Skipping a section will provide answers to some of the questions.
  It's not a guarantee of testing, but it can help you quickly
  advance to the right screen to test.
  
  ${tel(6073514615)}
fields:
  - Do you want to skip straight to the PDF?: wants_to_pick_sections
    datatype: radio
    choices:
      - Yes: False
      - No: True
  - Choose a section to skip: skip_sections
    datatype: checkboxes
    show if: wants_to_pick_sections
    choices:
      - Intro: skip_intro
      - Parties: skip_parties
      - Relationship: skip_relationship
      - Affidavit: skip_affidavit
      - Defendant information: skip_defendant_information
      - Children: skip_children
      - Custody and no-contact: skip_custody_no_contact
      - Child support affidavit: skip_child_support
      - Visitation: skip_visitation
      - Orders: skip_orders
      - Court: skip_court
      - Plaintiff confidential information: skip_plaintiff_information
      - Motion to impound: skip_impound
      - Past care or custody cases: skip_affidavit_care_or_custody
      - Signature: skip_signature
---
mandatory: True
code: |
  relationship_to_defendant_marriage_or_kids = DADict('relationship_to_defendant_marriage_or_kids',there_are_any=True, there_is_another=False)
  relationship_to_defendant_unmarried = DADict('relationship_to_defendant_unmarried',there_are_any=True, there_is_another=False)
  other_parties[0].race = DADict('other_parties[0].race', auto_gather=False, gathered=True)
  other_parties[0].physical_other = DADict('other_parties[0].physical_other', auto_gather=False, gathered=True)
  other_parties[0].physical_build = DADict('other_parties[0].physical_build', auto_gather=False, gathered=True)
  related_by_household = DADict('related_by_household', auto_gather=False, gathered=True)
  related_as_couple = DADict('related_as_couple',auto_gather=False,gathered=True)
  relationship_to_defendant_married = DADict('relationship_to_defendant_married', auto_gather=False, gathered=True)
  defendant_has_guns = DADict('defendant_has_guns', auto_gather=False, gathered=True)
---
mandatory: True
code: |

  if not wants_to_pick_sections:
    skip_sections = {}
    skip_sections[ 'skip_intro' ] = True
    skip_sections[ 'skip_parties' ] = True
    skip_sections[ 'skip_relationship' ] = True
    skip_sections[ 'skip_affidavit' ] = True
    skip_sections[ 'skip_defendant_information' ] = True
    skip_sections[ 'skip_children' ] = True
    skip_sections[ 'skip_custody_no_contact' ] = True
    skip_sections[ 'skip_child_support' ] = True
    skip_sections[ 'skip_visitation' ] = True
    skip_sections[ 'skip_orders' ] = True
    skip_sections[ 'skip_court' ] = True
    skip_sections[ 'skip_plaintiff_information' ] = True
    skip_sections[ 'skip_impound' ] = True
    skip_sections[ 'skip_affidavit_care_or_custody' ] = True
    skip_sections[ 'skip_signature' ] = True
  
  for section in [section for section in skip_sections if skip_sections[section]]:
    value(section)
---
include:
  - 209a_package.yml
---
sets: skip_intro
scan for variables: False
code: |
  basic_questions_intro_screen  = True
  main_209A_package_intro = True
  acknowledged_information_use = True
  user_saw_what_to_expect = True
  
  skip_intro = True
---
sets: skip_parties
scan for variables: False
code: |
  who_protecting_screener = "me"
  users[0].name.first = "Pat"
  users[0].name.last = "Plaintiff"
  plaintiff_is_major_yes = True
  defendant_is_major = True
  other_parties[0].name.first = "Drew"
  other_parties[0].name.last = "Defendant"
  defendant_has_alias = True
  other_parties[0].name_other = "Alias"
  other_parties[0].gender = "male"
  
  users[0].address.address = "120 Tremont St"
  users[0].address.city = "Boston"
  users[0].address.state = "MA"
  users[0].address.zip = "02108"
  
  other_parties[0].address.address = "121 Tremont St"
  other_parties[0].address.city = "Boston"
  other_parties[0].address.state = "MA"
  other_parties[0].address.zip = "02108"
  users[0].phone_number = "555-1234"
  
  users[0].address.geolocate()
  other_parties[0].address.geolocate()
  skip_parties = True
  
---
sets: skip_children
scan for variables: False
code: |
  plaintiff_has_minor_children = True
  plaintiff_has_children_parent_of = True
  plaintiff_has_children_cares_for = True
  children.target_number = 2
  children_cares_for.target_number = 1
  
  children[0].name.first = "Rae"
  children[0].name.last =  "User Only"
  children[0].birthdate = as_datetime("2020-05-01")
  children[0].defendant_is_parent = False
  children[1].name.first = "Jo"
  children[1].name.last = "Joint Child"
  children[1].birthdate= as_datetime("2019-04-01")
  children[1].defendant_is_parent = True
  children.gathered = True
  children_cares_for[0].name.first = "Cass"
  children_cares_for[0].name.last = "Care Of"
  children_cares_for[0].birthdate = as_datetime("2018-03-01")
  children_cares_for[0].defendant_is_parent = False 
  defendant_and_plaintiff_are_parents_of_child = True
  relationship_to_defendant_marriage_or_kids[ "defendant_and_plaintiff_are_parents_of_child"] = True
  
  children.gathered = True
  children_of_both = children.filter(defendant_is_parent = True)
  children_of_both.gathered = True
  
  skip_children = True
---
code: |
  children.gathered = True
---
sets: skip_relationship
scan for variables: False
code: |
  relationship_to_defendant_marriage_or_kids[ "defendant_and_plaintiff_relationship_married_to_each_other"] = True
  relationship_to_defendant_marriage_or_kids[ "defendant_and_plaintiff_relationship_formerly_married_to_each_other"] = True
  related_as_couple['engaged'] = True
  related_as_couple['dating'] = True
  related_as_couple['dated'] = True
  related_as_couple['past_engaged'] = True
  relationship_to_defendant_married['now'] = True
  related_by_household['past'] = True
  related_by_household['now'] = True 
  relationship_to_defendant_married['past'] = True
  relationship_to_defendant_unmarried[ 'defendant_and_plaintiff_are_dating_or_dated'] = True
  relationship_to_defendant_unmarried[ 'defendant_and_plaintiff_are_not_related_but_live_together'] = True
  relationship_to_defendant_unmarried[ 'defendant_and_plaintiff_are_not_related_but_live_together'] = True
  relationship_to_defendant_unmarried['defendant_and_plaintiff_engaged'] = True
  relationship_to_defendant_unmarried[ 'defendant_and_plaintiff_relationship_not_married_but_are_related'] = True
  relationship_to_defendant_unmarried[ 'defendant_and_plaintiff_used_to_live_together'] = True
  relationship_to_defendant_marriage_or_kids[ "defendant_and_plaintiff_are_parents_of_child"] = True
  
  skip_relationship = True
---
sets: skip_affidavit
scan for variables: False
code: |
  incidents_of_abuse.auto_gather=False
  incidents_of_abuse[0].date = "Last week" 
  incidents_of_abuse[0].year = "2020" 
  incidents_of_abuse[0].complete = True
  incidents_of_abuse[0].summary = "Example affidavit text"
  incidents_of_abuse[0].abuse = "fear"
  incidents_of_abuse.gathered = True
  affidavit_summary = incidents_of_abuse[0].summary
  affidavit_body = affidavit_summary
  
  complaint_209A_Affidavit_intro= True
  complaint_209A_Affidavit_intro_2= True
  complaint_209A_Affidavit_intro_3= True
  saw_incidents = True
  
  skip_affidavit = True
---
sets: skip_custody_no_contact
scan for variables: False
code: |
  has_participated_custody_case = True
  know_of_other_custody_case_yes = True

  wants_custody_of = children_of_both
  wants_no_contact_for = children_of_both
  wants_child_support_for = children_of_both
  majors_needing_support.there_are_any = False  # No PDF test?
  need_help_for_majors = majors_needing_support.there_are_any
  reasons_for_no_contact = 'No contact'
  schools_to_stay_away_from.there_are_any = False
  visitation_info = True
  wants_to_request_visitation_details = False
  
  skip_custody_no_contact = True  
---
sets: skip_visitation
scan for variables: False
code: |
  # TODO: These need to be untangled more. The variable names have changed,
  # but I'm not yet sure which of these old ones are necessary. Time is
  # of the essence!
  # Old vars
  wants_visitation_orders = True
  prohibit_visitation = False
  # permit_visitation_yes = True
  # prohibit_visitation_yes = False
  visitation_center_name = "The Visitation Center"
  visitation_center_payor_name = "The defendant"
  wants_supervision_yes = True
  visitation_supervisor_name = "Robert Supervisor"
  visitation_times = "Mondays at 3 PM"
  visitation_supervision_payor_name = "The defendant"
  wants_third_party_yes = True
  third_party_name = "A friend"
  
  # New vars. Trying to follow the desires expressed by the old vars. 
  prohibit_visitation = False
  wants_center = True
  visitation_center_name = "The Visitation Center"  # old vars
  pays_for_center = "defendant"  # These are choices now
  wants_supervision = True  # old vars
  visitation_supervisor_name_full = "Robert Supervisor"  # old vars
  supervision_time = "Mondays at 3 PM"  # old vars
  supervision_payer = "defendant"  # These are choices now
  other_supervision_payer = "defendant"  # These are choices now
  wants_pickup = True  # old vars
  who_picks_up = "A friend"  # old vars
  wants_other_order = True
  other_order = "Another order"

  skip_visitation = True
---
sets: skip_affidavit_care_or_custody
scan for variables: False
code: |
  explain_addresses_of_children = True
  explain_why_asking_about_attorneys  = True

  for child in children_of_both:
    child.address = users[0].address
    child.previous_addresses.auto_gather=False
    child.previous_addresses[0] = other_parties[0].address 
    child.previous_addresses.gathered = True
  
  other_care_custody_proceedings.auto_gather = False
  if not defined('other_care_custody_proceedings.gathered') or not other_care_custody_proceedings.gathered:
    new_case = other_care_custody_proceedings.appendObject()
    new_case.court_name = 'Suffolk Probate and Family Court'
    new_case.docket_number = '12-CV-0001'
    new_case.children = children_of_both
    new_case.case_status = "paternity"
    new_case.is_open = True
    new_case.user_role = 'P'
    other_care_custody_proceedings.auto_gather = False
    other_care_custody_proceedings.gathered = True
  
  if not defined('new_case.other_parties.gathered') or not new_case.other_parties.gathered:
    new_case.other_parties.auto_gather = False
    other_party = new_case.other_parties.appendObject()
    other_party.name.first = "Greta Grandmother"
    other_party.address.address = "123 Fake St"
    other_party.address.city = "Boston"
    new_case.other_parties.gathered = True
  
  if not defined('gals_investigators.gathered') or not gals_investigators.gathered:
    gals_investigators.auto_gather = False
    new_gal = gals_investigators.appendObject()
    new_gal.name.first = "Iden Investigator"
    new_gal.represented_children = children_of_both
    gals_investigators.gathered = True
  
    other_care_custody_proceedings[0].has_gal = True
    other_care_custody_proceedings[0].gals.target_number = 1
    # Is this a new gal or the same gal as the above?
  if not defined('other_care_custody_proceedings[0].gals.gathered') or not other_care_custody_proceedings[0].gals.gathered:
    other_care_custody_proceedings[0].gals.auto_gather = False
    new_gal2 = other_care_custody_proceedings[0].gals.appendObject()
    new_gal2.name.first = "Gallant Childs Guardian"
    new_gal2.represented_children = children_of_both  # needed?
    other_care_custody_proceedings[0].gals.gathered = True

  # Not sure where in flow this goes (plocket)
  other_care_custody_proceedings[0].atty_for_user = True
  other_care_custody_proceedings[0].atty_for_user_name = "User Attorney"
  other_care_custody_proceedings[0].atty_for_children = True
  other_care_custody_proceedings[0].atty_for_children_name = "Childs Attorney"
  
  attorneys_for_parents.auto_gather = False
  if not defined('attorneys_for_parents.gathered') or not attorneys_for_parents.gathered:
    atty1 = attorneys_for_parents.appendObject()
    atty1.name.first = "Ardent Advocate"
    atty1.represented_party = users[0]
    attorneys_for_parents.gathered = True
  
  if not defined('attorneys_for_children.gathered') or not attorneys_for_children.gathered:
    attorneys_for_children.auto_gather=False
    atty2 = attorneys_for_children.appendObject()
    atty2.name.first = "Childs Advocate"
    atty2.represented_children = children_of_both
    attorneys_for_children.gathered = True
    
  other_care_custody_proceedings[0].atty_for_defendant = True
  other_care_custody_proceedings[0].atty_for_defendant_name = "Defendant Advocate"
    
  A_affidavit_disclosing_care_or_custody_proceedings0009_intro  = True
  plaintiff_and_defendant_other_case_yes = True
  other_cases.auto_gather=False
  case = other_cases.appendObject()
  case.court_name = "Dorchester BMC"
  case.type_of_case = "Annulment"
  case.date = "2019"
  case.docket_number = "19-CV-1234"
  other_cases.gathered = True
  skip_affidavit_care_or_custody = True
---
scan for variables: False
sets: skip_atty_for_children
code: |
  
---
scan for variables: False
sets: skip_orders
code: |
  order_defendant_no_contact_unless_court_authorized_yes = True
  order_defendant_remain_away_plaintiff_residence_yes = True
  If_this_is_an_apartment_building_or_other_multiple_family_dwelling_check_here = True
  order_defendant_remain_away_plaintiff_residence_yes = True
  order_defendant_remain_away_plaintiff_workplace_yes = True
  order_defendant_remain_away_plaintiff_school_yes = True
  
  order_defendant_pay_yes = True
  order_defendant_pay_amount = 0
  losses_caused_by_defendant = ""
  order_defendant_pay_temporary_support_to_plaintiff_yes = True
  order_page_two_relief_yes = True
  order_other_relief_yes = True
  order_impound_plaintiff_address_residential_yes = True
  order_impound_plaintiff_address_work_yes = True
  order_impound_plaintiff_address_school = True
  order_other_relief_yes = True
  other_relief = ''
  order_relief_ex_parte = True
  
  # Not sure where in flow this goes (plocket)
  existing_order = True
  explain_no_child_support = True

  skip_orders = True
---
code: |
  courts[0] = macourts[26] # Should be BMC East Boston Division
  docket_numbers.auto_gather = False  
  docket_numbers[0] = '20-CV-1234'
  docket_numbers.gathered=True
  dont_know_docket_number = False
  skip_court = True
---
scan for variables: False
sets: skip_defendant_information
code: |
  defendantinformation209A0008_intro = True
  other_parties[0].birthdate = "2000-01-01"
  dont_know_birthdate = False
  other_parties[0].birthplace = "Denver"
  other_parties[0].social_security_number = "5555"
  parents[0] = "Defendant mother maiden name"
  parents[1] = "Defendant father name"
  other_parties[0].phone_number = "555-4567"
  other_parties[0].mobile_number = "555-4567"
  other_parties[0].email = "drew@example.com"
  signature_date = today()
  other_parties[0].gender = "male"
  other_parties[0].photo_yes = False
  other_parties[0].race["White"] = True
  other_parties[0].eye_color = "Orange"
  other_parties[0].hair_color = "Black"
  other_parties[0].height = "6 foot 1 inch"
  other_parties[0].weight = "180 pounds"
  other_parties[0].physical_build["Lanky"] = True
  other_parties[0].physical_other["Scars"] = True
  defendant_other_description = "Has a scar on right leg"
  other_parties[0].understands_english = True
  other_parties[0].address_floor = "First floor"
  other_parties[0].name_door_mailbox = "Drew"
  defendant_not_employed = True
  other_parties[0].employer = "N/A"
  other_parties[0].does_not_have_car = True
  other_parties[0].police_violence_yes = True
  other_parties[0].drug_alcohol_yes = False
  defendant_has_guns['gun'] = True
  defendant_has_guns['ammo'] = True
  defendant_has_guns['firearms ID'] = True
  defendant_has_guns['license'] = True
  # defendant_weapons_guns = True
  # defendant_weapons_ammunition = True
  # defendant_weapons_firearms_identification_card = True
  # defendant_weapons_license_to_carry = True
  defendant_weapons_description = "A pistol. A shotgun. A hunting rifle."
  
  other_parties[0].gun_license_carry_possess_yes = True
  other_parties[0].gun_license_carry_possess = "a license"
  other_parties[0].psychiatric_emotional_problems_yes = True
  other_parties[0].psychiatric_emotional_problems = "Borderline personality"
  other_parties[0].location_information_other = "A long description of where to find the defendant"
  other_parties[0].location_best = "Bar"
  other_parties[0].best_times_find = "Noon"
  other_parties[0].locations_other = "Library"
  
  skip_defendant_information = True
---
scan for variables: false
sets: skip_plaintiff_information
code: |
  A_Plaintiff_Confidential_Information0011_intro = True
  lives_in_domestic_violence_shelter = True
  domestic_violence_shelter_warning = True
  users[0].apartment_yes = True
  abuser_caused_plaintiff_to_leave_home = False
  users[0].birthdate = "1996-02-29"
  users[0].phone_number = "555-12345"
  signature_date = today()
  users[0].apartment_yes = "True"
  users[0].previous_addresses.there_are_any=False
  users[0].workplace_name = "Plaintiff workplace"
  users[0].workplace_address = "123 Main St, Boston, MA"
  users[0].workplace_phone = "555-7777"
  users[0].school_name = "Greendale"
  users[0].school_address = "123 Fake St, Boston, MA"
  user_needs_interpreter = True
  user_preferred_language = "American Sign Language"
  persons_authorized_confidential_information = "My best friend"
  Who_is_allowed_to_see_this_form = True
  skip_plaintiff_information = True
---
sets: skip_impound
scan for variables: False
code: |
  impoundment_intro = True
  impound_personal_information = True
  impound_case_record_information = True
  case_record_information_to_be_impounded = "All information about the case."
  impound_information_ex_parte = True
  request_based_on = "I need this because I'm in danger."
  skip_impound = True
---
sets: skip_signature
scan for variables: False
code: |
  users[0].signature = placeholder_signature
  skip_signature = True
---
sets: skip_child_support
scan for variables: False
code: |
  other_parties[0].defendant_parental_role = "father"
  other_parties[0].occupation = "Bricklayer"
  other_parties[0].employer = "Boston Brickworks"
  other_parties[0].work_address = "123 Brickbottom Road, Boston, MA"
  users[0].gross_income = 500
  users[0].gross_income_interval = "weekly"
  users[0].health_insurance = 200
  users[0].health_insurance_interval = "monthly"
  users[0].dental_vision_insurance = 75
  users[0].dental_vision_insurance_interval = "monthly"
  users.item(0).child_care_expenses = 1200
  users.item(0).child_care_expenses_interval = "monthly"
  users.item(0).child_care_other = 100
  users.item(0).child_care_other_interval = "monthly"
  other_parties[0].child_care_expenses = 25
  other_parties[0].child_care_expenses_interval = "weekly"
  other_parties[0].other_child_support_interval = "weekly"
  other_parties[0].other_child_support = 175
  
  skip_child_support = True
  
